{
  "openapi": "3.0.0",
  "info": {
    "title": "Grace Pharmacy API",
    "version": "1.0.0",
    "description": "API for managing user accounts and patient profiles for Grace Pharmacy (CSE341 Project)"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    },
    {
      "url": "https://cse341-week3-3vcu.onrender.com",
      "description": "Production server (Render)"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created successfully" },
          "400": { "description": "Invalid input" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a single user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "MongoDB ObjectId of the user"
          }
        ],
        "responses": {
          "200": { "description": "A single user", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } },
          "400": { "description": "Invalid ID format" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "summary": "Update an existing user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "MongoDB ObjectId of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "204": { "description": "User updated successfully" },
          "400": { "description": "Invalid input" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "MongoDB ObjectId of the user"
          }
        ],
        "responses": {
          "204": { "description": "User deleted successfully" },
          "400": { "description": "Invalid ID format" },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/profiles": {
      "get": {
        "summary": "Get all profiles",
        "tags": ["Profiles"],
        "responses": {
          "200": {
            "description": "List of all profiles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Profile" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "summary": "Create a new profile",
        "tags": ["Profiles"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Profile" }
            }
          }
        },
        "responses": {
          "201": { "description": "Profile created successfully" },
          "400": { "description": "Invalid input" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/profiles/{id}": {
      "get": {
        "summary": "Get a single profile by ID",
        "tags": ["Profiles"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "MongoDB ObjectId of the profile"
          }
        ],
        "responses": {
          "200": { "description": "A single profile", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Profile" } } } },
          "400": { "description": "Invalid ID format" },
          "404": { "description": "Profile not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "summary": "Update a profile",
        "tags": ["Profiles"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "MongoDB ObjectId of the profile"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Profile" }
            }
          }
        },
        "responses": {
          "204": { "description": "Profile updated successfully" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Profile not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "summary": "Delete a profile",
        "tags": ["Profiles"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "MongoDB ObjectId of the profile"
          }
        ],
        "responses": {
          "204": { "description": "Profile deleted successfully" },
          "400": { "description": "Invalid ID format" },
          "404": { "description": "Profile not found" },
          "500": { "description": "Server error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["patientName", "company", "position", "gender", "ageGroup", "email"],
        "properties": {
          "_id": { "type": "string", "description": "Auto-generated MongoDB ID" },
          "patientName": { "type": "string" },
          "company": { "type": "string" },
          "position": { "type": "string" },
          "gender": { "type": "string", "enum": ["Male", "Female", "Other"] },
          "ageGroup": { "type": "string", "enum": ["18-30","31-50","51+"] },
          "email": { "type": "string", "format": "email" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Profile": {
        "type": "object",
        "required": ["chronicMedication", "allergies", "nextOfKin", "phoneNumber"],
        "properties": {
          "_id": { "type": "string", "description": "Auto-generated MongoDB ID" },
          "chronicMedication": { "type": "string" },
          "allergies": { "type": "string" },
          "nextOfKin": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
